on join:
    if {bins::%player%} is not set:
        set {bins::%player%} to 0
        set title of player's scoreboard to "&bCultivators"

every 1 tick:
    loop all players:
        set title of loop-player's scoreboard to "&bCultivators"
        set line 1 of loop-player's scoreboard to " "
        set line 2 of loop-player's scoreboard to "Realm: %getRealmColor(loop-player)%%getRealm(loop-player)%"
        set line 3 of loop-player's scoreboard to " "
        set line 4 of loop-player's scoreboard to "&eBins: &a@%regex({bins::%loop-player%})%"
        set line 5 of loop-player's scoreboard to " "
        set line 6 of loop-player's scoreboard to "QI: &b%regex(getQI(loop-player))%"
        set line 7 of loop-player's scoreboard to " "
        set line 8 of loop-player's scoreboard to "&e--------------------------------"
        set line 9 of loop-player's scoreboard to " "
        set line 10 of loop-player's scoreboard to "%{questTxt::%loop-player%}% (%{questProg::%loop-player%}%/%{questComp::%loop-player%}%)"
        set line 11 of loop-player's scoreboard to " "
        set line 12 of loop-player's scoreboard to "&e--------------------------------"

on load:
    delete {ecoList::*}
    loop all offline players:
        add loop-value to {ecoList::*}

function TextToColor(t: text) :: text:
    set {_txt::*} to {_t} split at ""
    set {_ft} to ""
    loop {_txt::*}:
        if {_nextcolor} is true:
            if true is true:
                if loop-value is "1":
                    set {_ft} to "%{_ft}%&1"
                else if loop-value is "2":
                    set {_ft} to "%{_ft}%&2"
                else if loop-value is "3":
                    set {_ft} to "%{_ft}%&3"
                else if loop-value is "4":
                    set {_ft} to "%{_ft}%&4"
                else if loop-value is "5":
                    set {_ft} to "%{_ft}%&5"
                else if loop-value is "6":
                    set {_ft} to "%{_ft}%&6"
                else if loop-value is "7":
                    set {_ft} to "%{_ft}%&7"
                else if loop-value is "8":
                    set {_ft} to "%{_ft}%&8"
                else if loop-value is "9":
                    set {_ft} to "%{_ft}%&9"
                else if loop-value is "0":
                    set {_ft} to "%{_ft}%&0"
                else if loop-value is "e":
                    set {_ft} to "%{_ft}%&e"
                else if loop-value is "r":
                    set {_ft} to "%{_ft}%&r"
                else if loop-value is "l":
                    set {_ft} to "%{_ft}%&l"
                else if loop-value is "m":
                    set {_ft} to "%{_ft}%&m"
                else if loop-value is "n":
                    set {_ft} to "%{_ft}%&n"
                else if loop-value is "o":
                    set {_ft} to "%{_ft}%&o"
                else if loop-value is "a":
                    set {_ft} to "%{_ft}%&a"
                else if loop-value is "b":
                    set {_ft} to "%{_ft}%&b"
                else if loop-value is "c":
                    set {_ft} to "%{_ft}%&c"
                else if loop-value is "d":
                    set {_ft} to "%{_ft}%&d"
                else if loop-value is "f":
                    set {_ft} to "%{_ft}%&f"
                else:
                    set {_ft} to "%{_ft}%&%loop-value%"

            set {_nextcolor} to false
            continue
        if loop-value is "&":
            set {_nextcolor} to true
        else:
            set {_ft} to "%{_ft}%%loop-value%"
    return {_ft}


command /stl [<text>]:
    trigger:
        set {loreni::%player%} to TextToColor(arg-1)


function openShopPage(p: player, n: number, t: text):
    open chest inventory with 2 rows named "&6Query page %{_n}%" to {_p}
    set {_num} to 0
    set {_n} to {_n} -1 
    loop 9 times:
        if name of {globalA::%loop-value + 9 *{_n}%} or lore of {globalA::%loop-value + 9 *{_n}%} contains TextToColor({_t}):
            set {_i} to {globalA::%loop-value + 9 *{_n}%}
            add "&0 " to {_i}'s lore
            add "&eBins: &a@%{globalAP::%loop-value + 9 *{_n}%}%" to {_i}'s lore
            set slot {_num} of {_p}'s current inventory to {_i}
            add 1 to {_num}
        else if "%{globalA::%loop-value + 9 *{_n}%}%" contains TextToColor({_t}):
            set {_i} to {globalA::%loop-value + 9 *{_n}%}
            add "&0 " to {_i}'s lore
            add "&eBins: &a@%{globalAP::%loop-value + 9 *{_n}%}%" to {_i}'s lore
            set slot {_num} of {_p}'s current inventory to {_i}
            add 1 to {_num}
    set {_n} to {_n} +1 
    set slot 13 of {_p}'s current inventory to glowing Anvil named TextToColor({_t})
    if name of slot 13 of {_p}'s current inventory is not set:
        set slot 13 of {_p}'s current inventory to glowing Anvil named " "
    set slot 17 of {_p}'s current inventory to glowing arrow named "Next Page"
    if {_n} is not 1:
        set slot 9 of {_p}'s current inventory to glowing arrow named "Prev Page"



on inventory close:
    if name of player's current inventory contains "&aConfirm":
        if {res::%player%} is not set:
            open chest inventory with 3 rows named "&aConfirm" to player
            set slot 10 of player's current inventory to green terracotta named "&aConfirm"
            set slot 16 of player's current inventory to red terracotta named "&cCancel" 



command /checkGlobals [<text>]:
    trigger:
        if arg-1 is "del":
            delete {globalA::*}
            delete {globalAP::*}
            delete {globalSeller::*}
            delete {a::%player%::*}
        else:
            send " " to player
            loop {globalA::*}:
                send "%loop-value%" to player
            send " " to player
            loop {globalAP::*}:
                send "%loop-value%" to player
            send " " to player
            loop {globalSeller::*}:
                send "%loop-value%" to player
            send " " to player
            loop {a::%player%::*}:
                send "%loop-value%" to player

on tab complete of "/checkGlobals":
    set tab completions for position 1 to "del"

every 1 tick:
    loop all players:
        loop {messages::%loop-player%::*}:
            if {pause} is not true:
                send loop-value-2 to loop-player
                remove loop-value-2 from {messages::%loop-player%::*}


command /pause:
    trigger:
        if {pause} is true:
            set {pause} to false
        else:
            set {pause} to true

on inventory click:
    if name of player's current inventory contains "&6Query page":
        cancel event
        set {_p} to subtext of name of player's current inventory from characters 14 to length of name of player's current inventory
        set {_p} to {_p} parsed as number
        if clicked slot is glowing arrow:
            if name of clicked slot is "Next Page":
                openShopPage(player, {_p} + 1, name of slot 13 of player's current inventory)
            else if name of clicked slot is "Prev Page":
                openShopPage(player, {_p} - 1, name of slot 13 of player's current inventory)
        if index of clicked slot < 8:
            if {bins::%player%} >= {globalAP::%(index of clicked slot + 1) * {_p}%}:
                if lore of clicked slot contains "&0 ":
                    set {_q} to name of slot 13 of player's current inventory
                    close player's inventory
                    open chest inventory with 3 rows named "&aConfirm" to player
                    set slot 10 of player's current inventory to green terracotta named "&aConfirm"
                    set slot 16 of player's current inventory to red terracotta named "&cCancel" 
                    delete {res::%player%}
                    set {_timer} to 0
                    while {res::%player%} is not set:
                        add 1 to {_timer}
                        wait 1 tick
                    if {res::%player%} is true:
                        delete {res::%player%}
                        set {bins::%player%} to {bins::%player%} - {globalAP::%(index of clicked slot + 1) * {_p}%}
                        set {_bru} to {globalSeller::%(index of clicked slot + 1) * {_p}%}
                        set {_ir} to {globalA::%(index of clicked slot + 1) * {_p}%}
                        if name of {_ir} is set:
                            add "&aYour %name of {_ir}%&a has sold for %0.95 * {globalAP::%(index of clicked slot + 1) * {_p}%}% bins to %player%" to {messages::%{_bru}%::*}
                            send "&aYou bought %name of {_ir}%&a from %{_bru}% for %{globalAP::%(index of clicked slot + 1) * {_p}%}% bins" to player
                        else:
                            add "&aYour %{_ir}%&a has sold for %0.95 * {globalAP::%(index of clicked slot + 1) * {_p}%}% bins to %player%" to {messages::%{_bru}%::*}
                            send "&aYou bought %{_ir}%&a from %{_bru}% for %{globalAP::%(index of clicked slot + 1) * {_p}%}% bins" to player
                        add 0.95 * {globalAP::%(index of clicked slot + 1) * {_p}%} to {bins::%{_bru}%}
                        give {globalA::%(index of clicked slot + 1) * {_p}%} to player
                        delete {globalA::%(index of clicked slot + 1) * {_p}%}
                        delete {globalAP::%(index of clicked slot + 1) * {_p}%}
                        remove {_ir} from {a::%{_bru}%::*}
                        delete {globalSeller::%(index of clicked slot + 1) * {_p}%}
                    else:
                        delete {res::%player%}
                        openShopPage(player, {_p}, {_q})
            else if {bins::%player%} < {globalAP::%(index of clicked slot + 1) * {_p}%}:
                send "&cNot Enough Bins"
    else if name of player's current inventory contains "&aConfirm":
        cancel event
        if clicked slot is green terracotta named "&aConfirm":
            set {res::%player%} to true
            close player's inventory
        else if clicked slot is red terracotta named "&cCancel":
            set {res::%player%} to false
            close player's inventory


every 2 ticks:
    loop all players:
        send action bar {ab::%loop-player%} to loop-player

function addBins(p: player, a: number, r: text = "Unknown"):
    add {_a} to {bins::%{_p}%}                
    set {ab::%{_p}%} to "&a+@%{_a}% from %{_r}%"
    wait 2 seconds
    set {ab::%{_p}%} to ""




command /varReset:
    trigger:
        if player is op:
            open chest inventory with 3 rows named "&aConfirm" to player
            set slot 10 of player's current inventory to green terracotta named "&aConfirm"
            set slot 16 of player's current inventory to red terracotta named "&cCancel"
            delete {res.%player%}
            set {_timer} to 0
            while {res::%player%} is not set:
                add 1 to {_timer}
                wait 1 tick
            if {res.%player%} is true:
                delete {loc::*}
                delete {stats::*}
                loop all players:
                    set {_p::%loop-player%} to {power::%loop-player%}
                delete {power::*}
                loop all players:
                    set {power::%loop-player%} to {_p::%loop-player%}
                    delete {_p::%loop-player%}
                delete {b::*}
                delete {lg::*}
                delete {g::*}
                delete {br::*}
                delete {r::*}
                delete {o::*}
                delete {y::*}
                delete {l::*}
                delete {gr::*}
                delete {c::*}
                delete {lb::*}
                delete {b::*}
                delete {p::*}
                delete {m::*}
                delete {pi::*}
                delete {w::*}

command /shop [<text>] [<text>]:
    trigger:
        TextToColor(arg-2)
        if arg-1 is "sell":
            set {_price} to arg-2 parsed as number
            if {_price} >= 0:
                set {_i} to player's tool
                add {_i} to {a::%player%::*}
                add {_i} to {globalA::*}
                add {_price} to {globalAP::*}
                add player to {globalSeller::*}
                set slot index of player's selected hotbar slot of player's inventory to air
                send "&ayou have set your item up for sale it is item ##%size of {a::%player%::*}%" to player
            else:
                send "&cThe price cannot be negative"
        else if arg-1 is "buy":
            openShopPage(player, 1, arg-2)
        else if arg-1 is "cancel":
            set {_item} to arg-2 parsed as integer
            set {_i} to {a::%player%::%{_item}%}
            remove {_i} from {a::%player%::*}
            give {_i} to player
            loop {globalA::*}:
                if {globalSeller::%loop-index%} is player:
                    remove {_i} from {globalA::*}
                    delete {globalSeller::%loop-index%}
                    delete {globalAP::%loop-index%}

on tab complete of "/shop":
    set tab completions for position 1 to "sell" and "buy" and "cancel"

command /cheatItem [<text>] [<number>]:
    trigger:
        if arg-1 is "list":
            loop {cheatItems::*}:
                send "Item %loop-index%: %loop-value%" to player
        else if arg-1 is "add":
            add player's tool to {cheatItems::*}
        else if arg-1 is "get":
            give {cheatItems::%arg-2%} to player
    

on tab complete of "/cheatItem":
    set tab completions for position 1 to "list" and "add" and "get"



command /sudo [<offline player>] [<text>]:
    trigger:
        if player is op:
            make arg-1 execute command arg-2

command /bins [<text>] [<number>] [<offline player>]:
    trigger:
        if player is op:
            if arg-3 is not set:
                set {_p} to player
            else:
                set {_p} to arg-3
            if arg-1 is "set":
                set {bins::%{_p}%} to arg-2
            else if arg-1 is "add":
                add arg-2 to {bins::%{_p}%} 
            else:
                send "&cCorrect Ussage: /bins [add/set] [player] [number]"

on tab complete of "/bins":
    set tab completions for position 1 to "set" and "add"           